[alias]
  adds = add .
  br = branch
  ci = "!f() { git commit -m \"$*\"; }; f"
  co = "checkout"
  cr = "!f() { git checkout -b \"$*\" origin/\"$*\"; }; f"
  f = "fetch"
  fire = "!f() { $(git adds) && $(git ci $@) && $(git ps); }; f"
  firein = "!f() { git add -A && git commit -m \"$*\" && git push; }; f"
  st = status -sb
  sf = show --name-only
  pl = !git pull origin $(git symbolic-ref --short HEAD)
  ps = !git push origin $(git symbolic-ref --short HEAD)
  lg = log --pretty=format:'%Cred%h%Creset %C(bold)%cr%Creset %Cgreen<%an>%Creset %s' --max-count=24
  incoming = !(git fetch --quiet && git log --pretty=format:'%C(yellow)%h %C(white)- %C(red)%an %C(white)- %C(cyan)%d%Creset %s %C(white)- %ar%Creset' ..@{u})
  outgoing = !(git fetch --quiet && git log --pretty=format:'%C(yellow)%h %C(white)- %C(red)%an %C(white)- %C(cyan)%d%Creset %s %C(white)- %ar%Creset' @{u}..)
  unstage = reset HEAD --
  undo = "!f() { git checkout -- $@; echo done!; }; f"
  rebae="rebase"
  rb="rebase"
  rollback = "!f() { git reset --soft HEAD~1; echo done!; }; f"
  graph = log --no-decorate --graph --oneline
  rb = rebase
  rc = rebase --continue
  ra = rebase --abort
  untrack = clean -f
  race = shortlog -sn --since=\"01 Jan 20\"
  delete = branch -D
  sw = switch
  lb = switch -
  sm = switch master
  sd = switch develop
  st = stash
  std = stash drop
  get-upstream = rev-parse --abbrev-ref --symbolic-full-name @{u}
  stp = stash pop